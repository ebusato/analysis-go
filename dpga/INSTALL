# This script installs the latest git tag in the ~/godaq directory
# It assumes that the latest source code matches the latest git tag
#!/bin/bash

RED='\033[0;31m'
NC='\033[0m' # No Color

# Compiling latest source
echo -e "${RED}Compiling latest source${NC}"
PATHANALYSISGO=/home/daq/Travail/gowork/src/gitlab.in2p3.fr/avirm/analysis-go
PATHSOURCE=$PATHANALYSISGO"/"dpga/godaq
echo " PATHANALYSISGO="$PATHANALYSISGO
echo " PATHSOURCE="$PATHSOURCE
cd $PATHSOURCE
mk install
cd ../calib/computePedestals
mk install
cd ../computeTimeDepOffset
mk install

# Creating directory in ~/godaq
echo -e "${RED}Creating directory in ~/godaq${NC}"
PATHBASE=~/godaq
echo " PATHBASE="$PATHBASE

LATESTTAG=`git tag | sort -V | tail -1`
echo " LATESTTAG="$LATESTTAG

PATHINSTALL=$PATHBASE"/"$LATESTTAG
echo " PATHINSTALL="$PATHINSTALL

if [[ -e $PATHINSTALL ]]; then
	echo " "$PATHINSTALL" already exists, quitting"
	exit
else
	echo " "$PATHINSTALL" does not exists, creating it"
	mkdir $PATHINSTALL
fi

# Copying godaq, computePedestals, computeTimeDepOffset executables and root-fs directory to $PATHINSTALL
echo -e "${RED}Copying godaq, computePedestals, computeTimeDepOffset executables and root-fs directory to "$PATHINSTALL"${NC}"
cp $GOPATH/bin/godaq $PATHINSTALL/.
cp $GOPATH/bin/computePedestals $PATHINSTALL/.
cp $GOPATH/bin/computeTimeDepOffset $PATHINSTALL/.
rm $GOPATH/bin/godaq
rm $GOPATH/bin/computePedestals
rm $GOPATH/bin/computeTimeDepOffset
cp -r $PATHSOURCE/root-fs $PATHINSTALL/.

mkdir $PATHINSTALL/calib

/bin/cat <<EOM > $PATHINSTALL/runCalib.sh
#!/bin/bash

if  [[ -e calib/pedestals.csv ]]; then
    echo "calib/pedestals.csv already exists, pedestals are not recalculated"
else
    echo "calib/pedestals.csv does not exists, calculating pedestals and copying constants to outputPedestals/pedestals.csv"
    ./computePedestals -i \$1
    cp output/pedestals.csv calib/.
fi

if  [[ -e calib/timeDepOffsets.csv ]]; then
    echo "calib/timeDepOffsets.csv already exists, TDO are not recalculted"
else
    echo "calib/timeDepOffsets.csv does not exists, calculating TDO and copying constants to calib/timeDepOffsets.csv"
    ./computeTimeDepOffset -i \$1 -ped calib/pedestals.csv
    cp output/timeDepOffsets.csv calib/.
fi

rm -rf output
EOM

chmod +x $PATHINSTALL/runCalib.sh
